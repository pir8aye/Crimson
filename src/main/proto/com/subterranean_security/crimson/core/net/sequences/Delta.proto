/******************************************************************************
 *                                                                            *
 *                    Copyright 2016 Subterranean Security                    *
 *                                                                            *
 *  Licensed under the Apache License, Version 2.0 (the "License");           *
 *  you may not use this file except in compliance with the License.          *
 *  You may obtain a copy of the License at                                   *
 *                                                                            *
 *      http://www.apache.org/licenses/LICENSE-2.0                            *
 *                                                                            *
 *  Unless required by applicable law or agreed to in writing, software       *
 *  distributed under the License is distributed on an "AS IS" BASIS,         *
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  *
 *  See the License for the specific language governing permissions and       *
 *  limitations under the License.                                            *
 *                                                                            *
 *****************************************************************************/
syntax = "proto3";

package core.net.sequences;

option java_package = "com.subterranean_security.crimson.proto.core.net.sequences";

import "com/subterranean_security/crimson/core/net/sequences/Listener.proto";
import "com/subterranean_security/crimson/core/Misc.proto";

message MI_TriggerProfileDelta {
	repeated ProfileTimestamp profile_timestamp = 1;
}

message ProfileTimestamp {
	int32 cvid = 1;
	int64 timestamp = 2;
}

message AttributeGroupContainer {
	int32 group_type = 1; // CPU, GPU, GENERAL...
	string group_id = 2;
	map<int32, string> attribute = 3;
}

message EV_ProfileDelta {

	int32 cvid = 1;
	int64 departure_time = 2;
	
	// Groups
	repeated AttributeGroupContainer group = 10;
	
	// Nonstring attributes
	bool fig = 5;
	
}

message EV_ServerProfileDelta {
	EV_ProfileDelta pd = 1;

	repeated ListenerConfig listener = 2;
	repeated AuthMethod auth_method = 3;
}

message EV_ViewerProfileDelta {
	EV_ProfileDelta pd = 1;
	repeated int64 viewer_permissions = 2;
}

message EV_NetworkDelta {
	message NodeAdded {
		int32 cvid = 1;
		int32 parent = 2;
	}
	NodeAdded node_added = 1;
	
	message NodeRemoved {
		int32 cvid = 1;
	}
	NodeRemoved node_removed = 2;
	
	message LinkAdded {
		int32 cvid1 = 1;
		int32 cvid2 = 2;
	}
	LinkAdded link_added = 3;
	
	message LinkRemoved {
		int32 cvid1 = 1;
		int32 cvid2 = 2;
	}
	LinkRemoved link_removed = 4;
	
}